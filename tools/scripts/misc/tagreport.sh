# Description:
#   This script will list the CW tags in "case2" that are not
#   different or not in "case1". 
#
#   This script must be run from a Cygwin console, or from a
#   Linux system running the Bash shell.
#
#   To launch a Cygwin console on a CW appliance, double-click
#   C:\cygwin\cygwin.bat. To run this script, you will first need
#   to navigate to the directory where you have copied the script.
#   As an example, to navigate to the C:\tmp directory:
#     cd /cygdrive/c/tmp
#
#   Before running this script, you first need the CW XML files 
#   generated by metadata exports of both cases "case1" and "case2".
#   Use the following options for each metadata export:
#     o Use the "DEFAULT" export Template
#     o Select "Include tag event comments"
#     o Select "Include tag values"
#     o Select "Break out attachments as separate items"
#     o Select "Break out embeddings as separate items" 
#
#   Note: This script assumes that the CW docID values are the same
#   in cases "case1" and "case2". This will be true if "case2" is a 
#   restored backup of "case1".
#    
# Usage:
#   sh ./tagreport.sh <case1 xmls dir> <case2 xmls dir>
#
# Example usage and output:
#   ls -l case1dir
#   -rwxr-xr-x 1 jcdc Domain Users 8075 Jan  9 19:48 clearwe_export_0000001.xml
#   -rwxr-xr-x 1 jcdc Domain Users 8075 Jan  9 19:49 clearwe_export_0000002.xml
#   ls -l case2dir
#   -rwxr-xr-x 1 jcdc Domain Users 8507 Jan  9 19:55 clearwe_export_0000001.xml
#   -rwxr-xr-x 1 jcdc Domain Users 8507 Jan  9 19:56 clearwe_export_0000002.xml
#
#   sh ./tagreport.sh case1dir/ case2dir/
#   -----------------------------------
#   TAGS IN CASE2 THAT ARE NOT IN CASE1
#   -----------------------------------
#   0.7.31.5003.1þTagName="Tagset1 - cb2~:rb2" TagDataType="Text" TagValue="rb2" ModifiedOn="2014-01-09T09:54:59.012-05:00" ModifiedBy="superuser"
#   0.7.31.5003þTagName="Tagset1 - cb2" TagDataType="Boolean" TagValue="Yes" ModifiedOn="2014-01-09T10:11:33.747-05:00" ModifiedBy="superuser"

[ "$OS" = Windows_NT ] && set -o igncr && export PATH=/cygdrive/c/cygwin/bin:$PATH

# Parse the xml files and generate file with the following format:
#   checksuma \xfe docida \xfe tag1 \xae tag2 \xae
#   checksumb \xfe docidb \xfe tag1 \xae tag2 \xae tag3 \xae tag4 \xae
#   checksumc \xfe docidc \xfe tag1 \xae tag2 \xae tag3 \xae
#function parsexml() {
#cat $* | \
#sed -n -e '/DocID=/		{ s/.* DocID="\([^"]*\)".*/\1\xfe/;h }' \
#-e  '/TagName=.*ModifiedOn=.*/	{ s/^[ \t]*<Tag \([^>]*\)><\/Tag>/\1\xae/;H }' \
#-e '/StrictChecksum/  		{ s/^[ \t]*<StrictChecksum>\([^<]*\)<\/StrictChecksum>/\1\xfe/;G;s/\n//g;p }' \
#-e '/ContentChecksum/ 		{ s/^[ \t]*<ContentChecksum>\([^<]*\)<\/ContentChecksum>/\1\xfe/;G;s/\n//g;p }' 
#}

# Parse the xml files and generate file with the following format:
#   docida \xfe tag1
#   docida \xfe tag2
#   docidb \xfe tag5
function parsexml2() {
	local _casedir="$1"
	cat $(listxmls "$_casedir") | \
sed -n -e '/DocID=/		{ s/.* DocID="\([^"]*\)".*/\1\xfe/;h }' \
-e  '/TagName=.*ModifiedOn=.*/	{ s/^[ \t]*<Tag \([^>]*\)><\/Tag>/\1/;H;x;s/\n//g;p;s/\(.*\)\xfe.*/\1\xfe/;h }' 
}

# List the xml file names to parse
function listxmls() {
	local _casedir="$1"
	ls -1 "$_casedir"/clearwe_export_0*.xml | sort
}

# Sort file on first column
function sortfile() {
	local _file="$1"
	sort -t$'\xfe' -k1 "$_file"

}

# Indicate the tags in case2 that are not in case1
function incase2butnotincase1() {
	local _case1="$1"
	local _case2="$2"
	sortfile "$_case1" > "$_case1".sorted
	sortfile "$_case2" > "$_case2".sorted
	comm -13 "$_case1".sorted "$_case2".sorted
}

function usage() {
cat <<EOI

    Bad arguments!
    
    Usage:

    sh ./tagreport.sh <case1 xmls dir> <case2 xmls dir>

EOI
}

if [ $# -lt 2 ]; then
   usage
   exit
fi

_case1_dir="$1"
_case2_dir="$2"

echo "Parsing xml files for case1 ..." 1>&2
parsexml2 "$_case1_dir" > case1.log
echo "Parsing xml files for case2 ..." 1>&2
parsexml2 "$_case2_dir" > case2.log

echo "Comparing cases ...." 1>&2
cat <<EOI
-----------------------------------
TAGS IN CASE2 THAT ARE NOT IN CASE1
-----------------------------------
EOI

incase2butnotincase1 case1.log case2.log

cat <<EOI

Finished!
EOI

rm -f case1.log case1.log.sorted
rm -f case2.log case2.log.sorted
